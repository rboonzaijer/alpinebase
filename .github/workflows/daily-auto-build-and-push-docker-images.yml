name: Auto build and push docker containers

on:
  schedule:
    # Note: This is UTC time
    - cron: '45 8 * * *' # https://crontab.guru/#45_8_*_*_* “At 08:45.”
    - cron: '45 20 * * *' # https://crontab.guru/#45_20_*_*_* “At 20:45.”
  workflow_dispatch:

jobs:

  alpine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./alpine/rootless/Dockerfile -t roelscript/img:alpine .
          docker push roelscript/img:alpine

  alpine_nobody:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./alpine/nobody/Dockerfile -t roelscript/img:alpine-nobody .
          docker push roelscript/img:alpine-nobody

  alpine_root:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./alpine/root/Dockerfile -t roelscript/img:alpine-root .
          docker push roelscript/img:alpine-root

  imagemagick:
    needs: alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./imagemagick/Dockerfile -t roelscript/img:imagemagick .
          docker push roelscript/img:imagemagick

  nginx:
    needs: alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./nginx/Dockerfile -t roelscript/img:nginx .
          docker push roelscript/img:nginx

  php_nginx_83:
    needs: nginx
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./php-nginx/8.3/Dockerfile -t roelscript/img:php-nginx-8.3 .
          docker push roelscript/img:php-nginx-8.3

  php_nginx_83_dev:
    needs: php_nginx_83
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./php-nginx/8.3-dev/Dockerfile -t roelscript/img:php-nginx-8.3-dev .
          docker push roelscript/img:php-nginx-8.3-dev

  php_nginx_82:
    needs: nginx
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./php-nginx/8.2/Dockerfile -t roelscript/img:php-nginx-8.2 .
          docker push roelscript/img:php-nginx-8.2

  php_nginx_82_dev:
    needs: php_nginx_82
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6
      - run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u roelscript --password-stdin
          docker build --no-cache --pull -f ./php-nginx/8.2-dev/Dockerfile -t roelscript/img:php-nginx-8.2-dev .
          docker push roelscript/img:php-nginx-8.2-dev

  trivy_vulnerability_scan:
    needs: [alpine, alpine_root, alpine_nobody, imagemagick, nginx, php_nginx_83, php_nginx_83_dev, php_nginx_82, php_nginx_82_dev]
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: [alpine, alpine-root, alpine-nobody, imagemagick, nginx, php-nginx-8.3, php-nginx-8.3-dev, php-nginx-8.2, php-nginx-8.2-dev]
    steps:
      - uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: roelscript/img:${{ matrix.tag }}
          format: 'sarif'
          output: 'trivy-results.${{ matrix.tag }}.sarif'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
      - uses: github/codeql-action/upload-sarif@v3.25.6
        with:
          sarif_file: 'trivy-results.${{ matrix.tag }}.sarif'
