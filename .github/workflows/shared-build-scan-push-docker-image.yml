name: shared-build-scan-push-docker-image
on:
  workflow_call:
    inputs:
      FROM_IMAGE:
        default: 'alpine:latest'
        description: Base Image
        type: string
        required: true
      DOCKERFILE:
          description: Path to Dockerfile
          type: string
          required: true
      IMAGE_NAME:
        default: 'mytargetimage'
        description: Target image name
        type: string
        required: true
      IMAGE_TAG_SPECIFIC:
        default: '0.1'
        description: Target image tag (specific)
        type: string
        required: true
      IMAGE_TAG_ALIAS:
        default: ''
        description: Target image tag alias, like 'php-nginx:8.3' for 'php-nginx:8.3-1' (php8.3.*, nginx1.*)
        type: string
        required: false
      REPO_NAME:
        default: 'abcdefg'
        description: Repository base name {REPO_NAME}/{IMAGE_NAME}:{IMAGE_TAG_SPECIFIC}
        type: string
        required: false
    secrets:
      SECRET_DOCKERHUB_USERNAME:
        required: true
      SECRET_DOCKERHUB_TOKEN:
        required: true

permissions:
  contents: read
  actions: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    env:
      REPO_NAME: ${{ inputs.REPO_NAME }}
      FROM_IMAGE: ${{ inputs.FROM_IMAGE }}
      IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
      IMAGE_TAG_SPECIFIC: ${{ inputs.IMAGE_TAG_SPECIFIC }}
      DOCKERFILE: ${{ inputs.DOCKERFILE }}
      IMAGE_TAG_ALIAS: ${{ inputs.IMAGE_TAG_ALIAS }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4.1.6

      - name: Build new Docker image
        run: |
          echo "${{ secrets.SECRET_DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.SECRET_DOCKERHUB_USERNAME }} --password-stdin

          docker images ${{ inputs.REPO_NAME }}/*
          docker build --no-cache --pull --build-arg FROM_IMAGE=${{ inputs.FROM_IMAGE }} -f ${{ inputs.DOCKERFILE }} -t ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }} .
          docker images ${{ inputs.REPO_NAME }}/*

      - name: Tag fixed alias for Docker Scount
        # You can scan up to 3 repositories with the free tier of Docker Scout
        # https://docs.docker.com/subscription/scout-details/#docker-scout-free
        # So: bundle all images/tags into 1 docker repo ( usethis/alias:{imagename}-{tagname} ) so all the images will be scanned
        run: |
          docker images ${{ inputs.REPO_NAME }}/*
          docker tag ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }} ${{ inputs.REPO_NAME }}/alias:${{ inputs.IMAGE_NAME }}-${{ inputs.IMAGE_TAG_SPECIFIC }}
          docker images ${{ inputs.REPO_NAME }}/*

      - name: Tag Docker alias (if given)
        if: ${{ inputs.IMAGE_TAG_ALIAS }}
        run: |
          docker images ${{ inputs.REPO_NAME }}/*
          docker tag ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }} ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_ALIAS }}
          docker images ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_ALIAS }}

      - name: Trivy scan for vulnerabilities
        uses: aquasecurity/trivy-action@0.21.0
        with:
          #image-ref: ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }}
          image-ref: alpine:3.10 # has known vulnerability
          format: 'sarif'
          output: 'trivy-results.${{ inputs.REPO_NAME }}.${{ inputs.IMAGE_NAME }}.${{ inputs.IMAGE_TAG_SPECIFIC }}.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          exit-code: '1'

      # - uses: github/codeql-action/upload-sarif@v3.25.6
      #   if: always() # if the previous step has found vulnerabilities, then it exits, but run this job always to upload the results
      #   with:
      #     sarif_file: 'trivy-results.${{ inputs.REPO_NAME }}.${{ inputs.IMAGE_NAME }}.${{ inputs.IMAGE_TAG_SPECIFIC }}.sarif'
    
      - name: Trivy upload vulnerability report
        if: always() # if the previous step has found vulnerabilities, then it exits, but run this job always to upload the results
        run: |
          echo "TODO: Upload"

      - name: Push image + fixed alias to Docker Hub
        run: |
          docker images ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }}
          # docker push ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }}

          docker images ${{ inputs.REPO_NAME }}/alias:${{ inputs.IMAGE_NAME }}-${{ inputs.IMAGE_TAG_SPECIFIC }}
          # docker push ${{ inputs.REPO_NAME }}/alias:${{ inputs.IMAGE_NAME }}-${{ inputs.IMAGE_TAG_SPECIFIC }}

      - name: Push alias image to Docker Hub
        if: ${{ inputs.IMAGE_TAG_ALIAS }}
        run: |
          docker images ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_ALIAS }}
          # docker push ${{ inputs.REPO_NAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_ALIAS }}

  # trivy_vulnerability_scan:
  #   needs: 
  #     - alpine_rootless_latest
  #     - alpine_rootless_3_20
  #     - alpine_rootless_3_19
  #     - alpine_root_latest
  #     - alpine_root_3_20
  #     - alpine_root_3_19
  #     - alpine_nobody_latest
  #     - alpine_nobody_3_20
  #     - alpine_nobody_3_19
  #     - imagemagick_latest
  #     - nginx_1
  #     - nginx_1_3_19
  #     - php_nginx_83_1
  #     - php_nginx_83_1_dev
  #     - php_nginx_82_1
  #     - php_nginx_82_1_dev
  #     - php_nginx_81_1
  #     - php_nginx_81_1_dev
  #   permissions:
  #     security-events: write
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       image_tag:
  #         - alpine:latest
  #         - alpine:3.20
  #         - alpine:3.19
  #         - alpine:root
  #         - alpine:root-3.20
  #         - alpine:root-3.19
  #         - alpine:nobody
  #         - alpine:nobody-3.20
  #         - alpine:nobody-3.19
  #         - imagemagick:latest
  #         - nginx:1
  #         - nginx:1-3.19
  #         - php-nginx:8.3-1
  #         - php-nginx:8.3-1-dev
  #         - php-nginx:8.2-1
  #         - php-nginx:8.2-1-dev
  #         - php-nginx:8.1-1
  #         - php-nginx:8.1-1-dev
  #   steps:
  #     - uses: aquasecurity/trivy-action@0.21.0
  #       with:
  #         image-ref: usethis/${{ matrix.image_tag }}
  #         format: 'sarif'
  #         output: 'trivy-results.${{ matrix.image_tag }}.sarif'
  #         severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
  #     - uses: github/codeql-action/upload-sarif@v3.25.6
  #       with:
  #         sarif_file: 'trivy-results.${{ matrix.image_tag }}.sarif'


  # scan:
  #   name: Scan
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo "${{ secrets.SECRET_DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.SECRET_DOCKERHUB_USERNAME }} --password-stdin
  #         docker images

  # push:
  #   needs: scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         docker images
